JVM은 자바가상머신은 자바를 실행시키기 위한 가상 컴퓨터라는 뜻이다.
즉 자바는 JVM 이라는 가상 컴퓨터 위에서 동작을 한다.

일반 어플리케이션 같은 경우엔 하드웨어-OS-어플리케이션 처럼 운영체제와 종속되어 있어
운영체제가 바뀔 경우에 소스 코드를 수정해야 한다.

Java 어플리케이션 같은 경우에는 하드웨어-OS-JVM-어플리케이션으로 구성되어 있어 운영체제와 독립적이다.
그렇기 때문에 다른 운영체제에서 실행된다 하더라도 소스 코드를 수정할 필요가 없다.
다만 JVM 을 한번더 거치기 때문에 속도가 느리다는 단점을 가지고있다.
그 이유는 Java 컴파일러가 바이트코드로 변환 후 JVM이 해당 바이트코드를 해석해서 하드웨어에 맞는 기계어로 변환하여 실행하기 때문에 그렇다.
	- 이때 바이트코드를 하드웨어에 맞는 기계어로 변환하는 과정이 소스코드를 실행시키는 시점이기 때문에 더 느리다.

요즘에는 JIT 컴파일러가 바이트코드를 하드웨어 기계어로 바로 변환해주기 때문에 많이 빨라졌다.

다만 JVM은 OS에 종속적이기 때문에 OS에 맞는 JVM이 필요하다.
다만 각 OS에 맞는 JDK를 제공하고 있기 때문에 쉽게 설정이 가능하며, WORA 의 장점을 가지고 있다.

javac - 자바 컴파일러로 소스코드를 바이트코드로 컴파일한다.
java - 자바 인터프리터로 컴파일된 바이트코드를 해석하고 실행한다.,

자바의 장점
1. 운영체제의 독립적
2. 객체지향언어
3. 가비지컬렉션
4. 네트워크와 분산처리를 지원
5. 멀티쓰레드를 지원한다.
6. 동적 로딩을 지원