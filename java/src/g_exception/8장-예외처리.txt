[ 예외 처리 ]
프로그램 실행 중 어떠한 원인으로 오작동하거나 비 정상적으로 종료되는 경우, 이러한 결과를 초래할 수 있는 원인을 프로그램 오류, 또는 에러라고 한다.

컴파일 에러 : 컴파일 할 때 발생하는 에러
	ㄴ 컴파일러가 소스 파일 ( .java ) 을 검사하여 오타나 잘못된 구문, 자료형 체크 등의 기본적인 검사를 수행 후 
	문제가 없으면 클래스 파일 ( .class ) 을 생성한다.
런타임 에러 : 실행 도중 발생하는 에러
	ㄴ 컴파일 에러가 발생하지 않았더라도, 실행 도중에 오류가 발생할 수 있다.
논리적 에러 : 의도한 것과 다르게 동작하는 것

# 컴파일러는 소스 코드의 기본적인 에러는 찾을 수 있지만, 런타임 시점에 발생할 수 있는 잠재적인 오류는 찾지 못한다. 따라서 개발자는
# 프로그램 실행 도중 발생할 수 있는 모든 경우의 수를 고려해서 프로그래밍 해야한다.

자바에서는 런타임 시점에 발생할 수 있는 오류를 "에러(error)" 와 "예외(exception)" 두가지로 구분하였다.
- 에러(error) : 메모리 부족 (OutOfMemoryError) 와 스택오버플러우(StackOverFlowError) 와 같이 발생하면 복구할 수 없는 심각한 오류
- 예외(exception) : 발생하더라도 수습할 수 있는 비교적 덜 심각한 오류
에러(error) 는 프로그램이 종료되는 것을 막을 수 없지만, 예외 ( exception ) 은 프로그램이 종료되는 것을 코드로 막을 수 있다.
